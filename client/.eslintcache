[{"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\index.js":"1","D:\\exjobb\\ReceptMingel\\client\\src\\components\\PartingStrip.js":"2","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\index.js":"3","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\IngredientsInput.js":"4","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CookingStepsInput.js":"5","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\TopSection.js":"6","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\IngredientSection.js":"7","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\CookingStepsSection.js":"8","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\BottomSection.js":"9","D:\\exjobb\\ReceptMingel\\client\\src\\config\\icons.js":"10","D:\\exjobb\\ReceptMingel\\client\\src\\App.js":"11","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\User.page.js":"12","D:\\exjobb\\ReceptMingel\\client\\src\\components\\SideMenu\\index.js":"13","D:\\exjobb\\ReceptMingel\\client\\src\\components\\startPage\\RegisterNewUser\\index.js":"14","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CategoriesInput.js":"15","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\text.listItem.js":"16","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeBook.page.js":"17","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\Search.page.js":"18","D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\index.js":"19","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeBookView\\index.js":"20","D:\\exjobb\\ReceptMingel\\client\\src\\components\\GridContentWrapper.js":"21","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeEdit.page.js":"22","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeView.page.js":"23","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeWheel.js":"24","D:\\exjobb\\ReceptMingel\\client\\src\\customHooks\\useWindowDimensions.js":"25","D:\\exjobb\\ReceptMingel\\client\\src\\index.js":"26","D:\\exjobb\\ReceptMingel\\client\\src\\Header\\index.js":"27","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\Start.page.js":"28","D:\\exjobb\\ReceptMingel\\client\\src\\Header\\MainNavbar.js":"29","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\DifficultyInput.js":"30","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\categories.listItem.js":"31","D:\\exjobb\\ReceptMingel\\client\\src\\components\\SideMenu\\TypeIsRecipe.js":"32","D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\ResultCard.js":"33","D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\SearchInputArea.js":"34","D:\\exjobb\\ReceptMingel\\client\\src\\routes\\app.router.js":"35","D:\\exjobb\\ReceptMingel\\client\\src\\Footer\\index.js":"36","D:\\exjobb\\ReceptMingel\\client\\src\\config\\theme.js":"37","D:\\exjobb\\ReceptMingel\\client\\src\\components\\Hero.js":"38","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeCardSmall.js":"39","D:\\exjobb\\ReceptMingel\\client\\src\\components\\startPage\\LogInUser\\index.js":"40","D:\\exjobb\\ReceptMingel\\client\\src\\components\\inputField.js":"41","D:\\exjobb\\ReceptMingel\\client\\src\\axios.js":"42","D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\authentication\\authentication.context.js":"43","D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\authentication\\context.js":"44","D:\\exjobb\\ReceptMingel\\client\\src\\routes\\protected.route.js":"45","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CookingTimeInput.js":"46","D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\index.js":"47","D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\recipe\\context.js":"48","D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\recipe\\recipe.contextProvider.js":"49","D:\\exjobb\\ReceptMingel\\client\\src\\reportWebVitals.js":"50"},{"size":11256,"mtime":1611408571398,"results":"51","hashOfConfig":"52"},{"size":522,"mtime":1610654377468,"results":"53","hashOfConfig":"52"},{"size":11697,"mtime":1611175936046,"results":"54","hashOfConfig":"52"},{"size":4918,"mtime":1610654377471,"results":"55","hashOfConfig":"52"},{"size":5201,"mtime":1610968077884,"results":"56","hashOfConfig":"52"},{"size":2676,"mtime":1611175936063,"results":"57","hashOfConfig":"52"},{"size":2218,"mtime":1610654377475,"results":"58","hashOfConfig":"52"},{"size":1395,"mtime":1610654377475,"results":"59","hashOfConfig":"52"},{"size":1892,"mtime":1610654377474,"results":"60","hashOfConfig":"52"},{"size":4853,"mtime":1610722563493,"results":"61","hashOfConfig":"52"},{"size":296,"mtime":1610389320230,"results":"62","hashOfConfig":"52"},{"size":2951,"mtime":1610992506187,"results":"63","hashOfConfig":"52"},{"size":569,"mtime":1611175936078,"results":"64","hashOfConfig":"52"},{"size":8096,"mtime":1611232821157,"results":"65","hashOfConfig":"52"},{"size":3146,"mtime":1610566774475,"results":"66","hashOfConfig":"52"},{"size":4065,"mtime":1610566774479,"results":"67","hashOfConfig":"52"},{"size":2058,"mtime":1611408571407,"results":"68","hashOfConfig":"52"},{"size":343,"mtime":1610824095400,"results":"69","hashOfConfig":"52"},{"size":1023,"mtime":1610992506148,"results":"70","hashOfConfig":"52"},{"size":3452,"mtime":1611341815879,"results":"71","hashOfConfig":"52"},{"size":1462,"mtime":1610722563482,"results":"72","hashOfConfig":"52"},{"size":748,"mtime":1610722563497,"results":"73","hashOfConfig":"52"},{"size":7214,"mtime":1611408571411,"results":"74","hashOfConfig":"52"},{"size":3684,"mtime":1611408571399,"results":"75","hashOfConfig":"52"},{"size":798,"mtime":1610722563493,"results":"76","hashOfConfig":"52"},{"size":1024,"mtime":1610968077900,"results":"77","hashOfConfig":"52"},{"size":1076,"mtime":1611069043068,"results":"78","hashOfConfig":"52"},{"size":1365,"mtime":1610474415611,"results":"79","hashOfConfig":"52"},{"size":1585,"mtime":1611155209444,"results":"80","hashOfConfig":"52"},{"size":1010,"mtime":1611175936044,"results":"81","hashOfConfig":"52"},{"size":1144,"mtime":1610566774478,"results":"82","hashOfConfig":"52"},{"size":2888,"mtime":1611175936073,"results":"83","hashOfConfig":"52"},{"size":4715,"mtime":1610824095397,"results":"84","hashOfConfig":"52"},{"size":2086,"mtime":1610824095397,"results":"85","hashOfConfig":"52"},{"size":1426,"mtime":1611408571421,"results":"86","hashOfConfig":"52"},{"size":2626,"mtime":1610654377467,"results":"87","hashOfConfig":"52"},{"size":673,"mtime":1610654377478,"results":"88","hashOfConfig":"52"},{"size":1324,"mtime":1610566774473,"results":"89","hashOfConfig":"52"},{"size":1329,"mtime":1611408571391,"results":"90","hashOfConfig":"52"},{"size":3445,"mtime":1610992506166,"results":"91","hashOfConfig":"52"},{"size":2190,"mtime":1610968077888,"results":"92","hashOfConfig":"52"},{"size":228,"mtime":1611410228304,"results":"93","hashOfConfig":"52"},{"size":4751,"mtime":1611412258218,"results":"94","hashOfConfig":"52"},{"size":808,"mtime":1611332748988,"results":"95","hashOfConfig":"52"},{"size":648,"mtime":1610992506198,"results":"96","hashOfConfig":"52"},{"size":1363,"mtime":1611175936043,"results":"97","hashOfConfig":"52"},{"size":472,"mtime":1611068516834,"results":"98","hashOfConfig":"52"},{"size":447,"mtime":1611175936105,"results":"99","hashOfConfig":"52"},{"size":3295,"mtime":1611175936106,"results":"100","hashOfConfig":"52"},{"size":362,"mtime":1606839638891,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"u58s1p",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\index.js",["216","217"],"import {useContext, useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { styled } from 'styletron-react';\r\nimport THEME from './../../config/theme';\r\nimport AuthenticationContext from '../../contexts/authentication/context';\r\nimport RecipeContext from '../../contexts/recipe/context';\r\n\r\nimport { Icon } from \"@iconify/react\";\r\nimport roundStarOutline from '@iconify/icons-ic/round-star-outline';\r\nimport roundStarRate from '@iconify/icons-ic/round-star-rate';\r\nimport roundRadioButtonUnchecked from '@iconify/icons-ic/round-radio-button-unchecked';\r\nimport roundRadioButtonChecked from '@iconify/icons-ic/round-radio-button-checked';\r\nimport bxEdit from '@iconify/icons-bx/bx-edit';\r\nimport minusCircleOutline from '@iconify/icons-eva/minus-circle-outline';\r\n\r\nimport PartingStrip from '../PartingStrip';\r\nimport TopSection from './TopSection';\r\nimport IngredientSection from './IngredientSection';\r\nimport CookingStepsSection from './CookingStepsSection';\r\nimport BottomSection from './BottomSection';\r\n\r\n\r\nconst Wrapper = styled('div', {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    margin: '3rem 0',\r\n});\r\n\r\nconst FlexRow = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: '1rem'\r\n});\r\n\r\nconst SpaceBetweenWrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%'\r\n});\r\n\r\nconst HeadlineSmall = styled ('h4', {\r\n    fontFamily: THEME.fonts.text,\r\n    color: THEME.colors.black[0],\r\n    fontSize: THEME.fontSizes.normal,\r\n    fontWeight: 500,\r\n    letterSpacing: '0.05rem',\r\n    textTransform: 'uppercase'\r\n});\r\n\r\nconst RecipeWrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '812px',\r\n    margin: '1rem 2rem'\r\n});\r\n\r\nconst EditDeleteIcon = styled(Icon,{\r\n    fontSize: '35px',\r\n    color: THEME.colors.black[0],\r\n    marginLeft: '1.5rem',\r\n\r\n    ':hover' : {\r\n        cursor: 'pointer',\r\n        color: THEME.colors.contrast[0],\r\n    }\r\n});\r\n\r\nconst StarIcon = styled(Icon,({$isStarred})=> ({\r\n    margin: '0 0.5rem 0 -0.3rem',\r\n    fontSize: '40px',\r\n    color: $isStarred ? 'gold' : THEME.colors.black[0],\r\n\r\n    ':hover' : {\r\n        cursor: 'pointer',\r\n        color: $isStarred ? THEME.colors.black[0] : THEME.colors.contrast[0],\r\n    }\r\n}));\r\n\r\nconst SharedIcon = styled(Icon,({$isSharedRecipe})=> ({\r\n    margin: ' 0 0.5rem 0 -0.2rem',\r\n    fontSize: '30px',\r\n    color: $isSharedRecipe ? 'ForestGreen' : THEME.colors.black[0],\r\n\r\n    ':hover' : {\r\n        cursor: 'pointer',\r\n        color: THEME.colors.contrast[0],\r\n    }\r\n}));\r\n\r\nconst RecipeView = ({view, setIsEdit, isLoading, slug, getRecipeById, recipe, getRecipesByAuthor, userObject, setUserObject}) => {\r\n    const {recipeBook, getRecipeBook, user, updateUser} = useContext(AuthenticationContext);\r\n    const {patchRecipe, deleteRecipe} = useContext(RecipeContext);\r\n    //isSharedRecipe helps to display correct icon\r\n    const [isSharedRecipe, setIsShared] = useState(recipe.isShared);\r\n    //isStarred helps to display correct icon\r\n    const [isStarred, setIsStarred] = useState(false);\r\n    \r\n    console.log('recipeBook', userObject.recipeBook)\r\n    let history = useHistory();\r\n    \r\n    const removeRecipeBookItem = async (list, id) => {\r\n        console.log('REMOVE')\r\n        const newList = list.filter((item) => item !== id);\r\n        await setUserObject({\r\n            ...userObject,\r\n            recipeBook: newList,\r\n        })\r\n    };\r\n\r\n    const addRecipeBookItem = (listItem) => {\r\n        console.log('ADD')\r\n        const newItem = listItem;\r\n        const newList = [...userObject.recipeBook, newItem];\r\n        setUserObject({\r\n            ...userObject,\r\n            recipeBook: newList,\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (view === \"RecipeView\") getRecipeById(recipe._id)\r\n        updateUser(user._id, userObject)\r\n        if (view === \"RecipeBook\") getRecipeBook(user._id)\r\n    }, [userObject])\r\n\r\n    useEffect(() => {\r\n        const index = recipeBook.indexOf(x => x._id === recipe._id);\r\n        index === -1? setIsStarred(true) : setIsStarred(false)\r\n    }, [slug])\r\n    \r\n    //Patches recipe, gets the new recipe and changes icon\r\n    const handlePatchRecipe = () => {\r\n        let value = recipe.isShared? {\"isShared\" : false} : {\"isShared\" : true}\r\n        console.log('value', value)\r\n        patchRecipe(recipe._id, value)\r\n        //TODO test to move this to useEffect that listens to recipe.isShared\r\n        isSharedRecipe? removeRecipeBookItem(userObject.recipeBook, recipe._id) : addRecipeBookItem(recipe._id);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('wiiii', recipe.isShared)\r\n        setIsShared(recipe.isShared);\r\n    }, [recipe.isShared])\r\n\r\n    console.log('isShared', recipe.isShared)\r\n\r\n    const handleStarRecipe = () => {\r\n        isStarred? removeRecipeBookItem(userObject.recipeBook, recipe._id) : addRecipeBookItem(recipe._id);\r\n        getRecipeById(recipe._id)\r\n        setIsStarred(!isStarred);\r\n    }\r\n\r\n    //Deletes recipe, updates sidemenu-list and redirects user to start-recipe-page\r\n    const handleDelete = (id) => {\r\n        deleteRecipe(id);\r\n        getRecipesByAuthor(recipe.authorId);\r\n        history.push('/recipe');\r\n    };\r\n\r\n    //Check if recipe already is saved in recipeBook\r\n   /*  const checkIfAlreadyStarred = () => {\r\n        const index =  recipeBook.findIndex(recipe._id)\r\n        if (index > -1){\r\n            return true\r\n        }\r\n        else if(index === -1) {\r\n            return false\r\n        }\r\n    }; */\r\n\r\n    console.log('recipe._id', recipe._id)\r\n\r\n    //Transform for easier follow on where the different items are showing and are styled.\r\n    //Keeps id as recipe._id to easier see type of id used\r\n    const {\r\n        title,\r\n        preambleHTML,\r\n        imageURL,\r\n        portions,\r\n        cookingTime,\r\n        cookingSteps,\r\n        difficulty,\r\n        ingredients,\r\n        mdsaCategories,\r\n        author,\r\n        authorId,\r\n        // eslint-disable-next-line no-unused-vars\r\n        isShared\r\n    } = recipe; \r\n\r\n    return(\r\n        <Wrapper>\r\n            {/* Waiting for data to load before rendering */}\r\n            {isLoading? <p> is Loading </p>\r\n            : \r\n            <RecipeWrapper>\r\n                <FlexRow>\r\n                    {/* Renders different mini-headers depending on if there is a slug */}\r\n                    {!slug? \r\n                        <HeadlineSmall style = {{fontWeight: 700}}> \r\n                            VÄLKOMMEN TILL DINA RECEPT! \r\n                        </HeadlineSmall> \r\n                        :\r\n                        <>\r\n                            {/* Renders different mini-headers depending on is session-user is the same as recipe-owner */}\r\n                            {user._id !== authorId?\r\n                                <>\r\n                                    <StarIcon \r\n                                        $isStarred = {isStarred} \r\n                                        icon={isStarred? roundStarRate : roundStarOutline} \r\n                                        onClick = {() => handleStarRecipe(isStarred? {\"isStarred\" : false} : {\"isStarred\" : true})}\r\n                                    />\r\n                                    <HeadlineSmall> \r\n                                        {isStarred? 'SPARAD I DIN RECEPTBOK':'SPARA I DIN RECEPTBOK'}\r\n                                    </HeadlineSmall>\r\n                                </>\r\n                                :\r\n                                <SpaceBetweenWrapper>\r\n                                    {view === \"RecipeView\" &&\r\n                                        <>\r\n                                            <FlexRow $style = {{margin: 0}}>\r\n                                                <SharedIcon \r\n                                                    $isSharedRecipe = {isSharedRecipe} \r\n                                                    icon={isSharedRecipe ? roundRadioButtonChecked : roundRadioButtonUnchecked} \r\n                                                    onClick = {() => handlePatchRecipe()}\r\n                                                />\r\n                                                <HeadlineSmall> \r\n                                                    {isSharedRecipe? 'DELAD MED DINA VÄNNER' : 'FÄRDIG? DELA MED DINA VÄNNER'}\r\n                                                </HeadlineSmall>\r\n                                            </FlexRow>\r\n                                            {/* Renders Edit and delete-icon if session-user is the same as recipe-owner*/}\r\n                                            {user._id === authorId && \r\n                                                <FlexRow $style = {{margin: 0}}>\r\n                                                    <EditDeleteIcon\r\n                                                        icon = {minusCircleOutline}\r\n                                                        onClick = {() => handleDelete(recipe._id)}\r\n                                                    />\r\n                                                    <EditDeleteIcon\r\n                                                        icon = {bxEdit}\r\n                                                        onClick = {() => setIsEdit(true)}\r\n                                                    />\r\n                                                </FlexRow> \r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                    {view === \"RecipeBook\" && \r\n                                        <HeadlineSmall> \r\n                                            DETTA ÄR DITT RECEPT\r\n                                        </HeadlineSmall>\r\n                                    }\r\n                                    \r\n                                </SpaceBetweenWrapper>           \r\n                            }\r\n                        </>\r\n                    }  \r\n                </FlexRow>\r\n                <PartingStrip width = '100%'/>\r\n                {!slug && \r\n                    <HeadlineSmall $style = {{marginTop: '0.5rem', fontSize: THEME.fontSizes.small}}> \r\n                        Ditt senast skapade recept: \r\n                    </HeadlineSmall>\r\n                }\r\n                <TopSection \r\n                    title = {title} \r\n                    description = {preambleHTML} \r\n                    image = {imageURL} \r\n                    difficulty = {difficulty} \r\n                    cookingTime = {cookingTime}\r\n                />\r\n                <PartingStrip width = '100%'/>\r\n                <IngredientSection portions = {portions} ingredients = {ingredients}/>\r\n                <PartingStrip width = \"200px\" />\r\n                <CookingStepsSection cookingSteps = {cookingSteps}/>\r\n                <PartingStrip width = \"100%\" />\r\n                <BottomSection categories = {mdsaCategories} author = {author}/>\r\n            </RecipeWrapper>\r\n}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default RecipeView;",["218","219"],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\PartingStrip.js",[],["220","221"],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\index.js",["222"],"import {useContext, useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from '../../axios'\r\nimport { styled } from 'styletron-react';\r\nimport THEME from '../../config/theme';\r\nimport Icons from '../../config/icons';\r\nimport InputField from '../inputField';\r\nimport CategoriesInput from './CategoriesInput';\r\nimport CookingTimeInput from './CookingTimeInput';\r\nimport DifficultyInput from './DifficultyInput';\r\nimport IngredientsInput from './IngredientsInput';\r\nimport CookingStepsInput from './CookingStepsInput';\r\nimport PartingStrip from './../PartingStrip';\r\nimport AuthenticationContext from '../../contexts/authentication/context';\r\n\r\nconst Wrapper = styled('div', {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    padding: '3rem 0',\r\n});\r\n\r\nconst FormWrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '680px',\r\n    padding: '1rem 2rem'\r\n});\r\n\r\nconst TopFormWrapper = styled('div', {\r\n    display: 'grid',\r\n    gridTemplateColumns: '380px 220px',\r\n    gridTemplateRows: 'auto auto',\r\n    columnGap: '1rem',\r\n    width: '700px'\r\n});\r\n\r\nconst Label = styled('label', {\r\n    margin: '0 1rem 0 0',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.normal,\r\n    fontWeight: 700\r\n});\r\n\r\nconst FileUploadWrapper = styled('div', {\r\n    gridColumn: '2/3',\r\n    gridRow: '1/3',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.small,\r\n    fontWeight: 400\r\n});\r\n\r\nconst FileUpload = styled('div', ({$preview}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '90%',\r\n    backgroundImage: $preview && `url(${$preview})`,\r\n    backgroundColor: THEME.colors.grey[0],\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat:' no-repeat',\r\n    backgroundSize: 'cover',\r\n\r\n    ':hover' : {\r\n        backgroundColor: THEME.colors.black[0],\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nconst EffortWrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    margin: '1rem 0'\r\n});\r\n\r\nconst FlexRow = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n});\r\n\r\nconst Button = styled('button', {\r\n    width: '100%',\r\n    padding: '0.5rem',\r\n    margin: '2.5rem 0 1rem 0',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 0 2px black',\r\n    backgroundColor: THEME.colors.contrast[0],\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.normal,\r\n    fontWeight: 700,\r\n    textAlign: 'center',\r\n    color: THEME.colors.white[0],\r\n    letterSpacing: '0.05rem',\r\n\r\n    ':hover': {\r\n        cursor:'pointer',\r\n        backgroundColor: THEME.colors.black[0]\r\n    }\r\n});\r\n\r\nconst RecipeTemplate = ({ setIsEdit, isEdit, setIsAdd, isAdd, slug, getRecipeById, recipe, getRecipesByAuthor, inputValues, setInputValues }) => {\r\n    const {user} = useContext(AuthenticationContext);\r\n\r\n    //stores file-data that goes up to image-bucket at server\r\n    const [file, setFile] = useState(null);\r\n\r\n    let history = useHistory()\r\n    const { ImageIcon } = Icons;\r\n\r\n    //handle input-changes\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        setInputValues({\r\n            ...inputValues,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    //Sets the correct pre-set values depending on if user wants to add new recipe (empty fields)\r\n    // or want to edit existing field (pre-set fields with old values)\r\n    useEffect(() => {\r\n        if(isEdit && recipe && !isAdd){\r\n            setInputValues({\r\n                title: recipe.title,\r\n                preambleHTML: recipe.preambleHTML,\r\n                portions: recipe.portions,\r\n                cookingTime: recipe.cookingTime,\r\n                difficulty: recipe.difficulty,\r\n                ingredients: recipe.ingredients,\r\n                cookingSteps: recipe.cookingSteps,\r\n                mdsaCategories: recipe.mdsaCategories,\r\n                authorId: user._id,\r\n                author: user.username,\r\n                isShared: recipe.isShared\r\n            });\r\n        }else{\r\n            setInputValues({\r\n                title: '',\r\n                preambleHTML: '',\r\n                image: null,\r\n                portions: 0,\r\n                cookingTime: '0-15min',\r\n                difficulty: 'lätt',\r\n                ingredients: [],\r\n                cookingSteps: [],\r\n                mdsaCategories: [],\r\n                authorId: user._id,\r\n                author: user.username,\r\n                isShared: isEdit? recipe.isShared : false\r\n            })\r\n        } \r\n    },[isEdit])\r\n\r\n    \r\n\r\n    //Listens after changes to file-state. If changed to not null, the image will be sent to the bucket and id \r\n    // set to inputValues.image to link correct image in bucket to user in database.\r\n    useEffect(() => {\r\n        if (!file) return;\r\n        \r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n    \r\n        fetch('http://localhost:8080/api/images', {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            body: formData, \r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data && data.message === \"success\") {  \r\n              setInputValues((prev) => ({ ...prev, image: data.id }));\r\n            }\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [file]);\r\n\r\n    //sends inputvalues to db.\r\n    const handleSubmit = async() => {\r\n\r\n        //If user wants to add recipe we will post it\r\n        if(isAdd && !isEdit){\r\n            await axios\r\n            .post('/recipes', inputValues, { withCredentials: true })\r\n            .then((res) => {\r\n                //if response is good the user will be redirected to their new recipepage\r\n                if(res.status === 200) history.push(`/recipe/${res.data._id}`);\r\n            })\r\n            .catch(error => console.log(error))    \r\n        };\r\n\r\n        //If user wants to edit recipe we will patch existing recipe\r\n        if(!isAdd && isEdit){\r\n            await axios\r\n            .patch(`/recipes/${recipe._id}`, inputValues, { withCredentials: true })\r\n            .then((res) => {\r\n                if(res.status === 200){\r\n                    getRecipeById(slug)\r\n                    history.push(`/recipe/${recipe._id}`)   \r\n                }     \r\n            })\r\n            .catch(error => console.log(error))\r\n        };\r\n        \r\n        //Updates sidemenu with new recipe\r\n        getRecipesByAuthor(user._id);\r\n        \r\n        //will ensure closed edit-view\r\n        setIsEdit(false);\r\n        setIsAdd(false);\r\n    };\r\n\r\n    return(\r\n        <Wrapper>\r\n            <FormWrapper>\r\n                <TopFormWrapper>\r\n                    <InputField \r\n                        type = \"text\"  \r\n                        name = \"title\"\r\n                        value = {inputValues.title}\r\n                        placeholder = \"Titel\"\r\n                        styling = \"underline\"\r\n                        $style = {{ \r\n                            fontWeight: 700, \r\n                            fontSize: THEME.fontSizes.large, \r\n                            '::placeholder': {\r\n                                fontWeight: 700, \r\n                                fontSize: THEME.fontSizes.normal\r\n                            }}}\r\n                        handleChange = {handleChange}\r\n                    />\r\n                    {/* TODO break out file upload to own file? */}\r\n                    <FileUploadWrapper>\r\n                        <label htmlFor=\"upload-image\" style = {{height: '100%'}}>\r\n                            <FileUpload\r\n                                $preview = {\r\n                                    (file && URL.createObjectURL(file)) ||\r\n                                    ((recipe && isEdit) && recipe.imageURL) ||\r\n                                    null\r\n                                }\r\n                            >\r\n                                {!file && <ImageIcon color = {THEME.colors.white[0]} size = \"70px\"/>}\r\n                            </FileUpload>\r\n                        <p>{file && file.name }</p>\r\n                        </label>\r\n                        <InputField \r\n                            type = \"file\" \r\n                            name = \"image\" \r\n                            accept = \"image/*\"\r\n                            id = \"upload-image\"\r\n                            styling = \"basic\"\r\n                            $style = {{display: 'none'}}\r\n                            handleChange = {(event) => setFile(event.target.files[0])}\r\n                        />\r\n                    </FileUploadWrapper>\r\n                    <InputField \r\n                        $as = \"textarea\" \r\n                        name = \"preambleHTML\" \r\n                        placeholder = \"Beskrivning\"\r\n                        value = {inputValues.preambleHTML}\r\n                        rows=\"6\" \r\n                        cols=\"80\"  \r\n                        styling = \"box\"\r\n                        $style = {{\r\n                            fontFamily: THEME.fonts.text,\r\n                            fontWeight: 400, \r\n                            fontSize: THEME.fontSizes.small,\r\n\r\n                            '::-webkit-input-placeholder': {\r\n                                fontFamily: THEME.fonts.text,\r\n                                fontWeight: 400, \r\n                                fontSize: THEME.fontSizes.small\r\n                            }\r\n                        }}\r\n                        margin = \"1rem 0\"\r\n                        handleChange = {handleChange}\r\n                    />\r\n                </TopFormWrapper>\r\n\r\n                <EffortWrapper>\r\n                    <FlexRow>\r\n                        <Label for = \"difficulty\" > Svårighetsgrad: </Label>\r\n                        <DifficultyInput handleChange = {handleChange} difficulty = {inputValues.difficulty}/>\r\n                    </FlexRow>\r\n                    <FlexRow>\r\n                        <Label for = \"CookingTime\"> Tidsåtgång: </Label>\r\n                        <CookingTimeInput handleChange = {handleChange} cookingTime = {inputValues.cookingTime}/>\r\n                    </FlexRow>\r\n                </EffortWrapper>\r\n\r\n                <CategoriesInput inputValues = {inputValues} updateInputValues = {setInputValues}/>\r\n                \r\n                <FlexRow $style = {{margin: '3.5rem 0 0.5rem 0'}}>\r\n                    <Label>Antal portioner: </Label>\r\n                    <InputField \r\n                        type = \"number\" \r\n                        name = \"portions\" \r\n                        value = {inputValues.portions}\r\n                        min=\"1\" \r\n                        max=\"16\"\r\n                        styling = \"basic\"\r\n                        $style = {{width: '55px', padding: \"0.2rem 0.5rem\"}}\r\n                        handleChange = {handleChange}\r\n                    />\r\n                </FlexRow>\r\n\r\n                <IngredientsInput inputValues = {inputValues} updateInputValues = {setInputValues}/>\r\n                <PartingStrip width = \"200px\"/>\r\n                <CookingStepsInput inputValues = {inputValues} updateInputValues = {setInputValues}/>\r\n                <PartingStrip width = \"200px\"/>\r\n                <Button onClick = {handleSubmit}>Spara Recept</Button>\r\n            </FormWrapper>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default RecipeTemplate;",["223","224"],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\IngredientsInput.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CookingStepsInput.js",[],["225","226"],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\TopSection.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\IngredientSection.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\CookingStepsSection.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeView\\BottomSection.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\config\\icons.js",[],["227","228"],"D:\\exjobb\\ReceptMingel\\client\\src\\App.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\pages\\User.page.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\SideMenu\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\startPage\\RegisterNewUser\\index.js",["229","230"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from '../../../axios';\r\nimport { styled } from 'styletron-react';\r\nimport AuthenticationContext from '../../../contexts/authentication/context'\r\nimport Icons from '../../../config/icons';\r\nimport THEME from '../../../config/theme';\r\nimport InputField from '../../inputField';\r\n\r\nconst Wrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '430px',\r\n    //height: '440px',\r\n    padding: '30px',\r\n    marginTop: '7%',\r\n    backgroundColor: '#ffffff',\r\n    border: '1px solid black',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 0 3px black',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.small,\r\n    fontWeight: 500,\r\n    letterSpacing: '0.05rem'\r\n});\r\n\r\nconst Button = styled('button', {\r\n    height: '40px',\r\n    margin: '1rem 0',\r\n    backgroundColor: THEME.colors.contrast[0],\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 0 1px black',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.normal,\r\n    fontWeight: 700,\r\n    letterSpacing: '0.05rem',\r\n    color: THEME.colors.white[0],\r\n    textTransform: 'uppercase',\r\n\r\n    ':hover': {\r\n        cursor:'pointer',\r\n        backgroundColor:THEME.colors.black[0] \r\n    }\r\n});\r\n\r\nconst Text = styled('p', {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    ':hover': {\r\n        cursor:'pointer',\r\n        color:'darkorange' \r\n    }\r\n});\r\n\r\nconst FileUploadWrapper = styled('div', {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '130px',\r\n    margin: '0.5rem 0',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.small,\r\n    fontWeight: 400\r\n});\r\n\r\nconst FileUpload = styled('div', ({$preview}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '120px',\r\n    height: '120px',\r\n    borderRadius: '50%',\r\n    backgroundImage: $preview && `url(${$preview})`,\r\n    backgroundColor: THEME.colors.grey[0],\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat:' no-repeat',\r\n    backgroundSize: 'cover',\r\n\r\n    ':hover' : {\r\n        backgroundColor: THEME.colors.black[0],\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nconst RegisterNewUser = ({handleClick}) => {\r\n    const [inputValues, setInputValues] = useState({\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        image: null,\r\n        userInfo: ''\r\n    });\r\n\r\n    const {registerNewUser, user, isAuthenticated} = useContext(AuthenticationContext);\r\n    //stores file-data that goes up to image-bucket at server\r\n    const [file, setFile] = useState(null);\r\n    const [loginError, setLoginError] = useState({\r\n        isOk: true,\r\n        message: ''\r\n    });\r\n    const history = useHistory();\r\n\r\n    const { ImageIcon } = Icons;\r\n\r\n    //handle input-changes\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        setInputValues({\r\n            ...inputValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    //Listens after changes to file-state. If changed to not null, the image will be sent to the bucket and id \r\n    // set to inputValues.image to link correct image in bucket to user in database.\r\n    useEffect(() => {\r\n        if (!file) return;\r\n        \r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n    \r\n        fetch('http://localhost:8080/api/images', {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            body: formData, \r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data && data.message === \"success\") {  \r\n              setInputValues((prev) => ({ ...prev, image: data.id }));\r\n            }\r\n          })\r\n      }, [file]);\r\n\r\n      console.log('file', file)\r\n\r\n    const handleSubmit = async () => {\r\n        await registerNewUser(inputValues);\r\n        if(!isAuthenticated){\r\n            setLoginError({\r\n                isOk: false,\r\n                message: \"Kunde inte skapa en ny användare\"\r\n            });\r\n        } else {\r\n            setLoginError({\r\n                isOk: true,\r\n                message: \"\"\r\n            });\r\n            history.push(`/user/${user._id}`); \r\n        };\r\n    };\r\n\r\n    //TODO remove later when sure everything is still working\r\n    //sends inputvalues to db\r\n    /* const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:8080/api/users/', {\r\n            method: 'POST',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify(inputValues)\r\n        })\r\n        .then((res) => {\r\n            //if response is good the user will be redirected to their userpage\r\n            if(res.ok) history.push('/user');\r\n            res.json()\r\n        })\r\n        .catch((error) => {\r\n            console.log('error', error);\r\n        })\r\n    }; */\r\n\r\n    return(\r\n        <Wrapper>\r\n                <InputField \r\n                    type = \"text\"  \r\n                    name = \"username\" \r\n                    label = \"Användarnamn (unikt):\"\r\n                    styling = \"basic\"\r\n                    margin = \"0 0 0.5rem 0\"\r\n                    handleChange = {handleChange}\r\n                />\r\n\r\n                <InputField \r\n                    type = \"password\" \r\n                    name = \"password\" \r\n                    label = \"Lösenord:\"\r\n                    styling = \"basic\"\r\n                    margin = \"0.5rem 0\"\r\n                    handleChange = {handleChange}\r\n                />\r\n                \r\n                <InputField \r\n                    type = \"text\" \r\n                    name = \"firstName\" \r\n                    label = \"Förnamn:\"\r\n                    styling = \"basic\"\r\n                    margin = \"0.5rem 0\"\r\n                    handleChange = {handleChange}\r\n                />\r\n\r\n                <InputField \r\n                    type = \"text\"  \r\n                    name = \"lastName\" \r\n                    label = \"Efternamn:\" \r\n                    styling = \"basic\"\r\n                    margin = \"0.5rem 0\"\r\n                    handleChange = {handleChange}\r\n                />\r\n                <InputField \r\n                    $as = \"textarea\" \r\n                    name = \"userInfo\" \r\n                    label = \"Berätta något om dig själv?\"\r\n                    rows=\"4\" \r\n                    cols=\"80\" \r\n                    styling = \"box\"\r\n                    margin = \"0.5rem 0\"\r\n                    handleChange = {handleChange}\r\n                />\r\n\r\n                <FileUploadWrapper>\r\n                        <label htmlFor=\"upload-image\" style = {{height: '100%'}}>\r\n                            <FileUpload\r\n                                 $preview = {\r\n                                    file && URL.createObjectURL(file)\r\n                                }\r\n                            >\r\n                                {!file && <ImageIcon color = {THEME.colors.white[0]} size = \"70px\"/>}\r\n                            </FileUpload>\r\n                        <p style = {{textAlign: 'center'}}>{file && file.name }</p>\r\n                        </label>\r\n                        <InputField \r\n                            type = \"file\" \r\n                            name = \"image\" \r\n                            accept = \"image/*\"\r\n                            id = \"upload-image\"\r\n                            styling = \"basic\"\r\n                            $style = {{display: 'none'}}\r\n                            handleChange = {(event) => setFile(event.target.files[0])}\r\n                        />\r\n                    </FileUploadWrapper>\r\n                \r\n                <Button onClick = {handleSubmit}>Register</Button>\r\n                <Text onClick = {handleClick}>Redan registrerad? Logga in här</Text>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default RegisterNewUser;","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CategoriesInput.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\text.listItem.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeBook.page.js",["231","232","233","234","235"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport bxBookReader from '@iconify/icons-bx/bx-book-reader';\r\nimport Hero from '../components/Hero';\r\n//import GridContentWrapper from '../components/GridContentWrapper';\r\n//import SideMenu from '../components/SideMenu';\r\nimport RecipeBookView from '../components/RecipeBookView';\r\nimport AuthenticationContext from '../contexts/authentication/context';\r\n\r\nconst RecipeBookPage = () => {\r\n    const {recipeBook, getRecipeBook, user} = useContext(AuthenticationContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [sharedRecipes, setSharedRecipes] = useState([]);\r\n    const [recipe, setRecipe] = useState(null);\r\n\r\n    const [userObject, setUserObject] = useState({\r\n        username : user.username,\r\n        firstName : user.firstName,\r\n        lastName : user.lastName,\r\n        image : user.image,\r\n        userInfo : user.userInfo,\r\n        recipeBook : user.recipeBook,\r\n        imageURL: user.imageURL\r\n    });\r\n\r\n    let { slug } = useParams();\r\n\r\n    const getRecipesByIsShared = async() => {\r\n        await axios\r\n        .get('recipes/public', { withCredentials: true })\r\n        .then((res) => {\r\n            setSharedRecipes(res.data);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n    useEffect(() => { \r\n        getRecipeBook(user._id)\r\n        setIsLoading(true)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <Hero \r\n                title = 'Min Receptbok' \r\n                icon = {bxBookReader} \r\n            />\r\n{/*                 <SideMenu/> */}\r\n                <RecipeBookView\r\n                    sharedRecipes = {sharedRecipes}\r\n                    recipe = {recipe}\r\n                    $style = {{width: '100%'}}\r\n                    userObject = {userObject}\r\n                    setUserObject = {setUserObject}\r\n                />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default RecipeBookPage;","D:\\exjobb\\ReceptMingel\\client\\src\\pages\\Search.page.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeBookView\\index.js",["236","237"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../../axios';\r\nimport { styled } from 'styletron-react';\r\nimport THEME from '../../config/theme';\r\nimport AuthenticationContext from '../../contexts/authentication/context';\r\nimport RecipeWheel from '../RecipeWheel';\r\nimport RecipeView from '../RecipeView';\r\nimport InputField from '../inputField';\r\nimport PartingStrip from '../../components/PartingStrip';\r\n\r\nconst Wrapper = styled('div', {\r\n    width: '100%',\r\n});\r\n\r\nconst FilterInput = styled(InputField, {\r\n    width: '250px',\r\n    padding: '0.5rem 1rem',\r\n    margin: '1rem',\r\n    backgroundColor: THEME.colors.grey[0],\r\n    border: 'none',\r\n    fontFamily: THEME.fonts.text,\r\n    fontSize: THEME.fontSizes.small,\r\n});\r\n\r\nconst DecorativeLine = styled('div', {\r\n    width: '100%',\r\n    height: '0.6rem',\r\n    backgroundColor: THEME.colors.grey[0]\r\n});\r\n\r\nconst RecipeBookView = ({userObject, setUserObject}) => {\r\n    const {recipeBook} = useContext(AuthenticationContext);\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [recipe, setRecipe] = useState(null)\r\n\r\n    let { slug } = useParams();\r\n\r\n    console.log('recipeBook', recipeBook)\r\n    \r\n    //Filterinput passed on to RecipeWheel as prop\r\n    const handleChange = (event) => {\r\n        setFilterInput(event.target.value)\r\n    };\r\n\r\n    const getRecipeById = async(slug) => {\r\n        try{\r\n            let data = await axios.get(`recipes/${slug}`, { withCredentials: true })\r\n            .then(({data}) => data);\r\n            setRecipe(data)\r\n            setIsLoading(false)\r\n        }catch(error){\r\n            console.log(error)\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('slug', slug)\r\n        if(slug) {\r\n            getRecipeById(slug);\r\n            setIsLoading(true);\r\n            console.log(\"runs!\")\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [slug]);\r\n\r\n    return(\r\n        <Wrapper>\r\n            <FilterInput \r\n                styling = \"basic\" \r\n                handleChange = {(event) => handleChange(event)} \r\n                placeholder = 'Sök i din receptbok här...'\r\n            />\r\n            <RecipeWheel \r\n                recipeList = {recipeBook} \r\n                height = \"255px\" \r\n                bannerTitle = \"Filter-resultat\"\r\n                slug = {slug}\r\n                route = \"/recipeBook/\"\r\n            />\r\n            <DecorativeLine/>\r\n            {recipe === null && !slug ?\r\n                <p>Hoppas du hittar något smaskigt i din receptbok</p>\r\n                :\r\n                <>\r\n                    {isLoading? \r\n                        <>\r\n                            <p>Bakar recept...</p>\r\n                        </>\r\n                        :\r\n                        <RecipeView \r\n                            view = \"RecipeBook\"\r\n                            $style = {{margin: '1rem 0 3rem 0'}}\r\n                            slug = {slug}\r\n                            isLoading = {isLoading}\r\n                            recipe = {recipe}\r\n                            userObject = {userObject}\r\n                            setUserObject = {setUserObject}\r\n                        /> \r\n                    }\r\n                </>\r\n            }\r\n             \r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default RecipeBookView;","D:\\exjobb\\ReceptMingel\\client\\src\\components\\GridContentWrapper.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeEdit.page.js",[],["238","239"],"D:\\exjobb\\ReceptMingel\\client\\src\\pages\\RecipeView.page.js",["240"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport Hero from '../components/Hero';\r\nimport roundRestaurantMenu from '@iconify/icons-ic/round-restaurant-menu';\r\nimport GridContentWrapper from '../components/GridContentWrapper';\r\nimport RecipeView from '../components/RecipeView';\r\nimport RecipeTemplate from '../components/RecipeTemplate';\r\nimport SideMenu from '../components/SideMenu';\r\nimport AuthenticationContext from '../contexts/authentication/context';\r\n\r\nconst RecipeViewPage = () => {\r\n    const {user} = useContext(AuthenticationContext);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isAdd, setIsAdd] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [usersRecipes, setUsersRecipes] = useState([]);\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [inputValues, setInputValues] = useState({\r\n        title: null,\r\n        preambleHTML: '',\r\n        image: null,\r\n        portions: 0,\r\n        cookingTime: '0-15min',\r\n        difficulty: 'lätt',\r\n        ingredients: [],\r\n        cookingSteps: [],\r\n        mdsaCategories: [],\r\n        authorId: user._id,\r\n        author: user.username,\r\n        isShared: isEdit? recipe.isShared : false\r\n    });\r\n    \r\n    console.log('user.recipeBook', user.recipeBook)\r\n    const [userObject, setUserObject] = useState({\r\n        username : user.username,\r\n        firstName : user.firstName,\r\n        lastName : user.lastName,\r\n        image : user.image,\r\n        userInfo : user.userInfo,\r\n        recipeBook : user.recipeBook,\r\n        imageURL: user.imageURL\r\n    });\r\n\r\n    //For getting ID to recipe so we can get it and display it\r\n    let { slug } = useParams();\r\n\r\n    //Gets all the users recipes and when it is done it sets loading to false\r\n    //so we know for sure data isn't null before rerendering\r\n    const getRecipesByAuthor = async(authorId) => {\r\n        try{\r\n            let data = await axios.get(`recipes/author/${authorId}`, { withCredentials: true })\r\n            .then(({data}) => data);\r\n            setUsersRecipes(data)\r\n            if(!recipe) setRecipe(data[data.length - 1])\r\n            setIsLoading(false)\r\n        }catch(error){\r\n            console.log(error)\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecipesByAuthor(user._id)\r\n    }, [])\r\n\r\n    console.log('usersRecipe', usersRecipes)\r\n\r\n    //Gets correct recipe from db by using url-slug and sets loading to false when fetching is done\r\n    // so we know data isn't null on rendering\r\n    const getRecipeById = async(slug) => {\r\n        try{\r\n            let data = await axios.get(`recipes/${slug}`, { withCredentials: true })\r\n            .then(({data}) => data);\r\n            setRecipe(data)\r\n            setIsLoading(false)\r\n        }catch(error){\r\n            console.log(error)\r\n        };\r\n    };\r\n\r\n    //Gets the recipe that matches slug when url changes or display users first recipe if slug undefined. \r\n    //When it is done it sets loading to true again when component has gotten their data\r\n    useEffect(() => {\r\n        if(slug) {\r\n            getRecipeById(slug);\r\n            setIsLoading(true);\r\n        } else if(!slug) {\r\n            setRecipe(usersRecipes[0]);\r\n        }\r\n        if(!slug) setRecipe(usersRecipes[usersRecipes.length - 1])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [slug]);\r\n\r\n    return(\r\n        <> \r\n            <Hero \r\n                title = 'Mina Recept' \r\n                icon = {roundRestaurantMenu} \r\n            />\r\n            <GridContentWrapper>\r\n                <SideMenu  recipeList = {usersRecipes} setIsAdd = {setIsAdd} setIsEdit = {setIsEdit}/>\r\n                    {/* If no recipes yet, yser gets a little textmessage */}\r\n                    {usersRecipes.length === 0 && isLoading ?\r\n                        <>\r\n                            {!isAdd? \r\n                                <p>Skapa ditt första recept med knappen i sidomenyn</p> \r\n                                :\r\n                                <RecipeTemplate \r\n                                    setIsEdit = {setIsEdit}\r\n                                    isEdit = {isEdit}\r\n                                    setIsAdd = {setIsAdd}\r\n                                    isAdd = {isAdd}\r\n                                    getRecipesByAuthor = {getRecipesByAuthor} \r\n                                    inputValues = {inputValues} \r\n                                    setInputValues = {setInputValues}\r\n                                    slug = {slug}\r\n                                    getRecipeById = {getRecipeById}\r\n                                    recipe = {recipe}\r\n                                /> \r\n                                \r\n                            } \r\n                        </>  \r\n                        : \r\n                        <>\r\n                            {/* If loading of data isn't done yet, user will se a loading-text, \r\n                            else we will check if user wants to edit/add a recipe or not and show correct view */}\r\n                            {isLoading? <p>is Loading...</p> :   \r\n                                <>\r\n                                    {isEdit || isAdd? \r\n                                        <RecipeTemplate \r\n                                            setIsEdit = {setIsEdit}\r\n                                            isEdit = {isEdit}\r\n                                            setIsAdd = {setIsAdd}\r\n                                            isAdd = {isAdd}\r\n                                            getRecipesByAuthor = {getRecipesByAuthor} \r\n                                            inputValues = {inputValues} \r\n                                            setInputValues = {setInputValues}\r\n                                            //slug = {slug}\r\n                                            getRecipeById = {getRecipeById}\r\n                                            recipe = {recipe}\r\n                                            slug = {slug}\r\n                                        /> \r\n                                        : \r\n                                        <RecipeView \r\n                                            view = \"RecipeView\"\r\n                                            setIsEdit = {setIsEdit}\r\n                                            slug = {slug} \r\n                                            getRecipeById = {getRecipeById}\r\n                                            getRecipesByAuthor = {getRecipesByAuthor}\r\n                                            isLoading = {isLoading} \r\n                                            recipe = {recipe}\r\n                                            userObject = {userObject} \r\n                                            setUserObject = {setUserObject}\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            } \r\n                        </>\r\n                    }  \r\n            </GridContentWrapper>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default RecipeViewPage;","D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeWheel.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\customHooks\\useWindowDimensions.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\Header\\index.js",[],["241","242"],"D:\\exjobb\\ReceptMingel\\client\\src\\pages\\Start.page.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\Header\\MainNavbar.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\DifficultyInput.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\categories.listItem.js",[],["243","244"],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\SideMenu\\TypeIsRecipe.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\ResultCard.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\SearchView\\SearchInputArea.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\routes\\app.router.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\Footer\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\config\\theme.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\Hero.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeCardSmall.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\startPage\\LogInUser\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\inputField.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\axios.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\authentication\\authentication.context.js",["245"],"D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\authentication\\context.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\routes\\protected.route.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\components\\RecipeTemplate\\CookingTimeInput.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\index.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\recipe\\context.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\contexts\\recipe\\recipe.contextProvider.js",[],"D:\\exjobb\\ReceptMingel\\client\\src\\reportWebVitals.js",[],{"ruleId":"246","severity":1,"message":"247","line":128,"column":8,"nodeType":"248","endLine":128,"endColumn":20,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":133,"column":8,"nodeType":"248","endLine":133,"endColumn":14,"suggestions":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"252","replacedBy":"256"},{"ruleId":"254","replacedBy":"257"},{"ruleId":"246","severity":1,"message":"258","line":160,"column":7,"nodeType":"248","endLine":160,"endColumn":15,"suggestions":"259"},{"ruleId":"252","replacedBy":"260"},{"ruleId":"254","replacedBy":"261"},{"ruleId":"252","replacedBy":"262"},{"ruleId":"254","replacedBy":"263"},{"ruleId":"252","replacedBy":"264"},{"ruleId":"254","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":13},{"ruleId":"266","severity":1,"message":"270","line":100,"column":12,"nodeType":"268","messageId":"269","endLine":100,"endColumn":22},{"ruleId":"266","severity":1,"message":"271","line":12,"column":12,"nodeType":"268","messageId":"269","endLine":12,"endColumn":22},{"ruleId":"266","severity":1,"message":"272","line":14,"column":12,"nodeType":"268","messageId":"269","endLine":14,"endColumn":21},{"ruleId":"266","severity":1,"message":"273","line":16,"column":20,"nodeType":"268","messageId":"269","endLine":16,"endColumn":29},{"ruleId":"266","severity":1,"message":"274","line":28,"column":11,"nodeType":"268","messageId":"269","endLine":28,"endColumn":15},{"ruleId":"266","severity":1,"message":"275","line":30,"column":11,"nodeType":"268","messageId":"269","endLine":30,"endColumn":31},{"ruleId":"266","severity":1,"message":"276","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":20},{"ruleId":"266","severity":1,"message":"277","line":34,"column":12,"nodeType":"268","messageId":"269","endLine":34,"endColumn":23},{"ruleId":"252","replacedBy":"278"},{"ruleId":"254","replacedBy":"279"},{"ruleId":"246","severity":1,"message":"280","line":64,"column":8,"nodeType":"248","endLine":64,"endColumn":10,"suggestions":"281"},{"ruleId":"252","replacedBy":"282"},{"ruleId":"254","replacedBy":"283"},{"ruleId":"252","replacedBy":"284"},{"ruleId":"254","replacedBy":"285"},{"ruleId":"266","severity":1,"message":"286","line":10,"column":12,"nodeType":"268","messageId":"269","endLine":10,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRecipeBook', 'getRecipeById', 'recipe._id', 'updateUser', 'user._id', and 'view'. Either include them or remove the dependency array. If 'getRecipeById' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["287"],"React Hook useEffect has missing dependencies: 'recipe._id' and 'recipeBook'. Either include them or remove the dependency array.",["288"],"no-native-reassign",["289"],"no-negated-in-lhs",["290"],["289"],["290"],"React Hook useEffect has missing dependencies: 'isAdd', 'recipe', 'setInputValues', 'user._id', and 'user.username'. Either include them or remove the dependency array. If 'setInputValues' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],["289"],["290"],["289"],["290"],["289"],["290"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'loginError' is assigned a value but never used.","'recipeBook' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setRecipe' is assigned a value but never used.","'slug' is assigned a value but never used.","'getRecipesByIsShared' is assigned a value but never used.","'PartingStrip' is defined but never used.","'filterInput' is assigned a value but never used.",["289"],["290"],"React Hook useEffect has missing dependencies: 'getRecipesByAuthor' and 'user._id'. Either include them or remove the dependency array.",["292"],["289"],["290"],["289"],["290"],"'isLoadingBook' is assigned a value but never used.",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [getRecipeBook, getRecipeById, recipe._id, updateUser, user._id, userObject, view]",{"range":"301","text":"302"},"Update the dependencies array to be: [recipe._id, recipeBook, slug]",{"range":"303","text":"304"},"Update the dependencies array to be: [isAdd, isEdit, recipe, setInputValues, user._id, user.username]",{"range":"305","text":"306"},"Update the dependencies array to be: [getRecipesByAuthor, user._id]",{"range":"307","text":"308"},[4076,4088],"[getRecipeBook, getRecipeById, recipe._id, updateUser, user._id, userObject, view]",[4257,4263],"[recipe._id, recipeBook, slug]",[4810,4818],"[isAdd, isEdit, recipe, setInputValues, user._id, user.username]",[2394,2396],"[getRecipesByAuthor, user._id]"]